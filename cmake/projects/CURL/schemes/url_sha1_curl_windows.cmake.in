# Copyright (c) 2014, Ruslan Baratov
# All rights reserved.

cmake_minimum_required(VERSION 3.0)
project(Hunter)
include("@HUNTER_SELF@/cmake/Hunter")
hunter_add_package(OpenSSL)
find_package(OpenSSL)



include(ExternalProject) # ExternalProject_Add




# Scheme for download and install Curl library for Windows



list(APPEND CMAKE_MODULE_PATH "@HUNTER_SELF@/cmake/modules")

include(hunter_fatal_error)
include(hunter_internal_error)
include(hunter_status_debug)
include(hunter_test_string_not_empty)


hunter_status_debug("Scheme: url_sha1_curl_windows")

# Check preconditions
hunter_test_string_not_empty("@HUNTER_SELF@")
hunter_test_string_not_empty("@HUNTER_EP_NAME@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_URL@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SHA1@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_INSTALL_PREFIX@")
hunter_test_string_not_empty("@HUNTER_INSTALL_PREFIX@")
hunter_test_string_not_empty("@HUNTER_MSVC_ARCH@")
hunter_test_string_not_empty("@HUNTER_MSVC_VERSION@")
hunter_test_string_not_empty("@HUNTER_MSVC_VCVARSALL@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_LICENSE_FILE@")
hunter_test_string_not_empty("@HUNTER_GLOBAL_SCRIPT_DIR@")

# this bit copied from openssl scheme for windows, not sure what it is for.
if("@MSVC@")
  # Logging as Workaround for VS_UNICODE_OUTPUT issue:
  # https://public.kitware.com/Bug/view.php?id=14266
  set(log_opts LOG_CONFIGURE 1)
else()
  set(log_opts "")
endif()




## workout output directory from options for install step 
#build assuming specific build options 
SET(CURL_BUILD_OUTPUT "@HUNTER_PACKAGE_SOURCE_DIR@/Builds/libcurl-vc@HUNTER_MSVC_VERSION@-@HUNTER_MSVC_ARCH@")
SET(CURL_BUILD_COMMAND "")

# build release version allways
#if(CMAKE_BUILD_TYPE STREQUAL Release)
  SET(CURL_BUILD_COMMAND "${CURL_BUILD_COMMAND} DEBUG=no")
  SET(CURL_BUILD_OUTPUT "${CURL_BUILD_OUTPUT}-release")
#else()
#  SET(CURL_BUILD_COMMAND "${CURL_BUILD_COMMAND} DEBUG=yes")
#  SET(CURL_BUILD_OUTPUT "${CURL_BUILD_OUTPUT}-debug") 
#endif()


# Hunter builds static libraries by default
if(BUILD_SHARED_LIBS)
  SET(CURL_BUILD_MODE "mode=dll")
  SET(CURL_BUILD_OUTPUT "${CURL_BUILD_OUTPUT}-dll")
else()
  SET(CURL_BUILD_MODE "mode=static")
  SET(CURL_BUILD_OUTPUT "${CURL_BUILD_OUTPUT}-static")
endif()

if(OpenSSL_FOUND)
  SET(CURL_BUILD_SSL "WITH_SSL=static")
  SET(CURL_BUILD_OUTPUT "${CURL_BUILD_OUTPUT}-ssl")
endif()

# add rest of defaults
SET(CURL_BUILD_OUTPUT "${CURL_BUILD_OUTPUT}-static-ipv6-sspi")

hunter_status_debug("Curl Build Folder: ${CURL_BUILD_OUTPUT}")

ExternalProject_Add(
    "@HUNTER_EP_NAME@"
    URL
    "@HUNTER_PACKAGE_URL@"
    URL_HASH
    SHA1=@HUNTER_PACKAGE_SHA1@
    DOWNLOAD_DIR
    "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
    SOURCE_DIR
    "@HUNTER_PACKAGE_SOURCE_DIR@"
    INSTALL_DIR
    "@HUNTER_PACKAGE_INSTALL_PREFIX@"
    CONFIGURE_COMMAND
    "@HUNTER_MSVC_VCVARSALL@" "@HUNTER_MSVC_ARCH@"
   
    BUILD_COMMAND
    cd winbuild &&  nmake /f Makefile.vc ${CURL_BUILD_MODE} ${CURL_BUILD_SSL} WITH_DEVEL="@HUNTER_INSTALL_PREFIX@" VC=@HUNTER_MSVC_VERSION@ ENABLE_SSPI=yes ENABLE_IDN=yes ENABLE_WINSSL=no MACHINE=@HUNTER_MSVC_ARCH@ GEN_PDB=yes ENABLE_IPV6=yes ${CURL_BUILD_COMMAND}
    BUILD_IN_SOURCE
    1
    INSTALL_COMMAND
    "@CMAKE_COMMAND@" -E copy_directory ${CURL_BUILD_OUTPUT} "@HUNTER_INSTALL_PREFIX@"
    COMMAND # Copy license files
    "@CMAKE_COMMAND@"
    "-Dsrcdir=@HUNTER_PACKAGE_SOURCE_DIR@"
    "-Ddstfile=@HUNTER_PACKAGE_LICENSE_FILE@"
    -P
    "@HUNTER_GLOBAL_SCRIPT_DIR@/try-copy-license.cmake"
    ${log_opts}
)
